@use "@scss/class/mixins.scss" as m;

//
@layer ux-classes {
    :root, :scope {
        --scale: 1;
        --translate-x: 0px;
        --translate-y: 0px;
    }

    :host {
        &, & :where(*) {
            --scale: 1;
            --translate-x: 0px;
            --translate-y: 0px;
        }
    }

    //
    ui-window-frame, :host(ui-window-frame) {
        & {
            --translate-x: var(--ds-x, 0px);
            --translate-y: var(--ds-y, 0px);
        }
    }

    //
    ui-icon {
        mask-image: linear-gradient(#0000, #0000);
    }

    //
    .round-decor {
        & { --background-tone-shift: 0; };

        & {
            padding-block: 0.25rem;
            border-radius: 0.25rem;
            box-shadow: 0px 0px 0.333rem oklch(from #010101 l c h / 0.4);
            background-color: --c2-surface(var(--background-tone-shift, 0), var(--current, transparent));
            overflow: hidden;
        }

        //
        &:empty {
            padding: 0px;
            display: none;
            pointer-events: none;
            visibility: collapse;
        }
    }

    //
    .time-format {
        // font styles
        & {
            font-size: 0.9em;
            font-optical-sizing: auto;
            font-variant-numeric: tabular-nums;
            font-weight: 500;
            font-kerning: auto;
            font-family: 'InterVariable', 'Inter', 'Fira Mono', 'Menlo', 'Consolas', monospace;
            font-stretch: condensed;
            font-width: condensed;
        }

        & {
            display: inline flex;
            place-content: center;
            place-items: center;
            place-self: center;
        }

        // text styles
        & {
            text-overflow: ellipsis;
            text-overflow: "";
            text-wrap: nowrap;
            text-align: center;
            white-space: nowrap;
            letter-spacing: -0.05em;
            padding: 0.125rem;
        }

        //
        & { flex-direction: row; }

        // IDK, where put direction, after display or end of mixin?
        @include m.display('inline flex', center, center);
        @include m.size(max-content, max-content);
    }


    //
    .ctx-menu {
        & {
            position: fixed;
            min-inline-size: 100px;
            inline-size: max-content;
            block-size: max-content;
            z-index: calc(99999 + var(--z-index, 0)) !important;
            opacity: var(--opacity, 1);
            transform: scale(var(--scale, 1)) translate(var(--translate-x, 0px), var(--translate-y, 0px));
            pointer-events: auto;
            font-size: 0.8em;
        }

        //
        &, * {
            visibility: visible;
            content-visibility: visible;
        }

        //
        & > * {
            transition-behavior: allow-discrete;
            transition: --background-tone-shift 0.2s ease-in-out;
            background-color: --c2-surface(var(--background-tone-shift, 0), var(--current, transparent));
            pointer-events: auto;
            place-content: center;
            place-items: center;
            cursor: pointer;

            /* */
            &:not(.ctx-menu-separator) {
                padding: 0.125rem;
            }

            /* */
            & { --background-tone-shift: 0; };
            &:hover {
                --background-tone-shift: 0.1;
            }

            & > span {
                text-align: start;
                justify-self: start;
                user-select: none;
                pointer-events: none;
                padding-inline: 0.25rem;
            }

            & > ui-icon {
                --icon-size: 1.8rem;
                //--icon-color: --c2-on-surface(var(--icon-tone-shift, 0), var(--current, transparent));
                background-color: var(--icon-color, currentColor);
                padding: 0.5rem;
                user-select: none;
                pointer-events: none;
            }
        }

        & > .ctx-menu-separator {
            block-size: 0.0625rem;
            background-color: --c2-on-surface(var(--background-tone-shift, 0), var(--current, transparent));
            opacity: 0.1;
        }
    }
}
