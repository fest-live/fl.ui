@use "./utils" as *;

/*************/
/* TONE COEF */
/*************/

/* theme shading determination in [0 to 1] */
@mixin theme-affect($basis-tone: "surface", $when-light, $when-dark) {
    //$when-light: "calc(1.0 - var(--#{$basis-tone}-tone, 0.5) * 0.3)";
    //$when-dark: "calc(0.1 + var(--#{$basis-tone}-tone, 0.5) * 0.6)";

    --#{$basis-tone}-dep: calc(#{$when-light} * (1 - var(--detected-theme, 0)) + #{$when-dark} * var(--detected-theme, 0));
}

/* Generate theme affect */
@mixin theme-affect-default($basis-tone: "surface") {
    @include theme-affect($basis-tone,
        "calc(1.0 - var(--#{$basis-tone}-tone, 0.0) * 0.9)",
        "calc(0.1 + var(--#{$basis-tone}-tone, 0.5) * 0.9)");
}

/* Generate tone shifting */
@mixin tone-shifting($affected: "surface", $shift: "surface-tone-shift") {
    /* 0.2 - power of shift affection */
    /* 0.9 - tone correction factor */
    --#{$affected}-dep-shift: clamp(0, calc( var(--#{$affected}-dep, 0) * 0.99 + calc(var(--#{$shift}, 0) * #{mix(1, -1, 'var(--detected-theme, 0)')}) * 0.6 ), 1);

    /* if > 0.5, try first variant, if <= 0.5, try secondary */
    /* if (d - 0.5) less than 0, rounds up to 0 (lights), more than 0, rounds up to 1 (darker) */
    --#{$affected}-choice-factor: clamp(0, round(up, calc(var(--#{$affected}-dep-shift, 0) - 0.5), 1), 1);
    //--#{$affected}-choice-factor: clamp(0, calc(var(--#{$affected}-dep-shift, 0) - 0.5), 1);
}
