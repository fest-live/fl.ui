@use "@scss/class/mixins.scss" as m;

// sizes
@property --ui-slider-track-size { syntax: "<percentage> | <length>"; inherits: true; initial-value: 0.125rem; }
@property --ui-slider-thumb-size { syntax: "<percentage> | <length>"; inherits: true; initial-value: 1rem; }

// radius
@property --ui-slider-track-radius { syntax: "<percentage> | <length>"; inherits: true; initial-value: 0.0625rem; }
@property --ui-slider-thumb-radius { syntax: "<percentage> | <length>"; inherits: true; initial-value: 0.5rem; }

// colors
@property --ui-slider-track-color { syntax: "<color>"; inherits: true; initial-value: #111; }
@property --ui-slider-thumb-color { syntax: "<color>"; inherits: true; initial-value: #222; }

//
@layer ui-slider {
    :host(ui-slider) {
        &, * {
            box-sizing: border-box;
            transition-behavior: allow-discrete;
            interpolate-size: allow-keywords;
            user-select: none;
            pointer-events: none;
        }

        //
        & {
            // sizes
            --ui-slider-track-size: 0.125rem;
            --ui-slider-thumb-size: 1rem;

            // radius
            --ui-slider-track-radius: 0.0625rem;
            --ui-slider-thumb-radius: 0.5rem;

            // colors
            --ui-slider-track-color: light-dark(#111, #e0e0e0);
            --ui-slider-thumb-color: light-dark(#222, #f0f0f0);
        }

        //
        & {
            @include m.display('inline-flex', center, center);
            @include m.size(100px, 1rem);
            @include m.interaction(none);
        }

        //
        & {
            container-type: size;
            container-name: ui-slider;
            overflow: visible;
            contain: none;
        }

        //
        & {
            min-inline-size: max-content;
            min-block-size: max-content;
            max-inline-size: -webkit-fill-available;
            max-block-size: -webkit-fill-available;
            max-inline-size: -moz-available;
            max-block-size: -moz-available;
            max-inline-size: available;
            max-block-size: available;
        }

        //
        .ui-box {
            @include m.position(relative);
            @include m.size(calc(100% - var(--ui-slider-thumb-size) - var(--ui-slider-track-size) * 2));
            @include m.display(flex, center, center);

            //
            .ui-track {
                @include m.position(absolute);
                @include m.size(100%, var(--ui-slider-track-size));
                @include m.round-corner(var(--ui-slider-track-radius));
                @include m.color(var(--ui-slider-track-color));
                @include m.interaction(auto);

                //
                & {
                    inset-block-start: 50%;
                    transform: translateY(-50%);
                }
            }

            //
            .ui-thumb {
                @include m.interaction(auto, grab);
                @include m.position(absolute);
                @include m.size(var(--ui-slider-thumb-size), var(--ui-slider-thumb-size), '1 / 1');
                @include m.round-corner(var(--ui-slider-thumb-radius));
                @include m.color(var(--ui-slider-thumb-color));

                //
                & {
                    &:not([data-dragging]) {
                        transition: --translate-x 0.1s ease-in-out;
                    }

                    //
                    &[data-dragging] {
                        transition: none;
                        //pointer-events: none;
                    }

                    //
                    --size-w: calc(100cqi - var(--ui-slider-thumb-size, 0px) - var(--ui-slider-track-size, 0px) * 2);
                    --shift-x: calc(var(--value, 0) * var(--size-w, 100cqi));
                    --translate-x: calc(clamp(0px, calc(var(--drag-x, 0) * 1px + var(--shift-x, 0px)), var(--size-w, 100cqi)) - var(--ui-slider-thumb-size, 0px) / 2);

                    //
                    inset-block-start: 50%;
                    transform: translate(var(--translate-x, 0px), -50%);
                    border-radius: 50%;
                    pointer-events: auto;
                }
            }
        }

        //
        ::slotted(*) {
            @include m.position(absolute);
            @include m.display(none);
        }
    }
}
